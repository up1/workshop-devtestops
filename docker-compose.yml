services:
  dotnet-api:
    build:
      context: ./dotnet-api
      dockerfile: Dockerfile
    ports:
      - "9000:8080"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - DB_HOST=postgres
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_NAME=postgres
      - DB_PORT=5432
    depends_on:
      postgres:
        condition: service_healthy

  python-api:
    build:
      context: ./python-api
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      - PYTHONUNBUFFERED=1
      - FASTAPI_ENV=development
      - DB_HOST=postgres
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_NAME=postgres
      - DB_PORT=5432
    depends_on:
      postgres:
        condition: service_healthy
  postgres:
    image: postgres:17
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres
    ports:
      - "5432:5432"
    volumes:
      - ./postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  python-api-test:
    image: postman/newman:alpine
    tty: true
    stdin_open: true
    command:
      run python-api.postman_collection.json -k
      -r cli,junit
      --reporter-junit-export="reports/results.xml"
    volumes:
      - ./postman/:/etc/newman
  selenium-hub:
    image: selenium/hub:4.21.0
    ports:
      - "4442:4442"
      - "4443:4443"
      - "4444:4444"
  chrome:
    image: selenium/node-chrome
    environment:
      - SE_EVENT_BUS_HOST=selenium-hub
      - SE_EVENT_BUS_PUBLISH_PORT=4442
      - SE_EVENT_BUS_SUBSCRIBE_PORT=4443
  robot-runner:
    build:
      context: ./robot
      dockerfile: Dockerfile
    volumes:
      - ./report/results:/app/results
    depends_on:
      - selenium-hub
      - chrome
    environment:
      - SELENIUM_URL=http://selenium-hub:4444/wd/hub
    command: robot --outputdir /app/results /app/*.robot